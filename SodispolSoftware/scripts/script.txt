-- Table: roleuser

-- DROP TABLE roleuser;

CREATE TABLE roleuser
(
  idroleuser bigserial NOT NULL,
  descripcion character varying(255) NOT NULL,
  CONSTRAINT roleuser_pkey PRIMARY KEY (idroleuser)
)
WITH (
  OIDS=FALSE
);
ALTER TABLE roleuser
  OWNER TO postgres;

  
-- Table: doctor

-- DROP TABLE doctor;

CREATE TABLE doctor
(
  iddoctor bigserial NOT NULL,
  username character varying(100) NOT NULL,
  horaentrada time without time zone NOT NULL,
  horasalida time without time zone NOT NULL,
  estadoborrado boolean NOT NULL,
  idroleuser bigint NOT NULL,
  CONSTRAINT doctor_pkey PRIMARY KEY (iddoctor),
  CONSTRAINT fkdoctor144224 FOREIGN KEY (idroleuser)
      REFERENCES roleuser (idroleuser) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT doctor_username_key UNIQUE (username)
)
WITH (
  OIDS=FALSE
);
ALTER TABLE doctor
  OWNER TO postgres;

-- Index: doctor_iddoctor

-- DROP INDEX doctor_iddoctor;

CREATE INDEX doctor_iddoctor
  ON doctor
  USING btree
  (iddoctor);

-- Index: i_doctor_username

-- DROP INDEX i_doctor_username;

CREATE UNIQUE INDEX i_doctor_username
  ON doctor
  USING btree
  (username COLLATE pg_catalog."default", estadoborrado);

-- Index: i_doctor_username_estado

-- DROP INDEX i_doctor_username_estado;

CREATE UNIQUE INDEX i_doctor_username_estado
  ON doctor
  USING btree
  (username COLLATE pg_catalog."default", estadoborrado);

-- Table: estudiante

-- DROP TABLE estudiante;

CREATE TABLE estudiante
(
  idestudiante bigserial NOT NULL,
  matricula character varying(10) NOT NULL,
  cedula character varying(10) NOT NULL,
  username character varying(100) NOT NULL,
  direccion character varying(255),
  estadocivil character varying(50),
  telefono character varying(15),
  estadoborrado boolean NOT NULL,
  idroleuser bigint NOT NULL,
  CONSTRAINT estudiante_pkey PRIMARY KEY (idestudiante),
  CONSTRAINT fkestudiante241992 FOREIGN KEY (idroleuser)
      REFERENCES roleuser (idroleuser) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT estudiante_username_key UNIQUE (username)
)
WITH (
  OIDS=FALSE
);
ALTER TABLE estudiante
  OWNER TO postgres;

  
-- Table: enfermero

-- DROP TABLE enfermero;

CREATE TABLE enfermero
(
  idenfermero bigserial NOT NULL,
  username character varying(255) NOT NULL,
  estadoborrado boolean NOT NULL,
  idroleuser bigint NOT NULL,
  CONSTRAINT enfermero_pkey PRIMARY KEY (idenfermero),
  CONSTRAINT fkenfermero7465 FOREIGN KEY (idroleuser)
      REFERENCES roleuser (idroleuser) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT enfermero_username_key UNIQUE (username)
)
WITH (
  OIDS=FALSE
);
ALTER TABLE enfermero
  OWNER TO postgres;

-- Index: i_enfermero_username

-- DROP INDEX i_enfermero_username;

CREATE UNIQUE INDEX i_enfermero_username
  ON enfermero
  USING btree
  (username COLLATE pg_catalog."default", estadoborrado);

-- Index: i_enfermero_username_estado

-- DROP INDEX i_enfermero_username_estado;

CREATE UNIQUE INDEX i_enfermero_username_estado
  ON enfermero
  USING btree
  (username COLLATE pg_catalog."default", estadoborrado);


-- Table: fichamedicaestudiante

-- DROP TABLE fichamedicaestudiante;

CREATE TABLE fichamedicaestudiante
(
  idfichamedica bigserial NOT NULL,
  antecedentespatologicos text,
  enfermedadesinfancia text,
  vacunasrecibidas text,
  idestudiante bigint NOT NULL,
  aparatorespiratorio character varying(255),
  aparatocirculatorio character varying(255),
  aparatodigestivo character varying(255),
  aparatogenicourinario character varying(255),
  sistemalinfatico character varying(255),
  sistemanervioso character varying(255),
  examenpiel character varying(255),
  CONSTRAINT fichamedicaestudiante_pkey PRIMARY KEY (idfichamedica),
  CONSTRAINT fkfichamedic220896 FOREIGN KEY (idestudiante)
      REFERENCES estudiante (idestudiante) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
)
WITH (
  OIDS=FALSE
);
ALTER TABLE fichamedicaestudiante
  OWNER TO postgres;

  
-- Table: citamedica

-- DROP TABLE citamedica;

CREATE TABLE citamedica
(
  idcita bigserial NOT NULL,
  estadocita character varying(1) NOT NULL,
  idestudiante bigint NOT NULL,
  estadoborrado boolean NOT NULL,
  iddoctor bigint NOT NULL,
  fechareg timestamp without time zone NOT NULL,
  fechaprog timestamp without time zone NOT NULL,
  CONSTRAINT citamedica_pkey PRIMARY KEY (idcita),
  CONSTRAINT fkcitamedica121843 FOREIGN KEY (idestudiante)
      REFERENCES estudiante (idestudiante) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fkcitamedica356543 FOREIGN KEY (iddoctor)
      REFERENCES doctor (iddoctor) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
)
WITH (
  OIDS=FALSE
);
ALTER TABLE citamedica
  OWNER TO postgres;

  
-- Table: detallefichaestudiante

-- DROP TABLE detallefichaestudiante;

CREATE TABLE detallefichaestudiante
(
  iddetalleficha bigserial NOT NULL,
  estatura double precision,
  peso double precision,
  presionarterial character varying(255),
  pulso character varying(255),
  ruidoscardiacos character varying(255),
  observaciones text,
  temperatura character varying(255),
  estadoborrado boolean NOT NULL,
  iddoctor bigint NOT NULL,
  idcita bigint,
  idfchamedica bigint NOT NULL,
  fecha timestamp without time zone NOT NULL,
  CONSTRAINT detallefichaestudiante_pkey PRIMARY KEY (iddetalleficha),
  CONSTRAINT fkdetallefic646359 FOREIGN KEY (idcita)
      REFERENCES citamedica (idcita) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fkdetallefic763279 FOREIGN KEY (iddoctor)
      REFERENCES doctor (iddoctor) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fkdetallefic917157 FOREIGN KEY (idfchamedica)
      REFERENCES fichamedicaestudiante (idfichamedica) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
)
WITH (
  OIDS=FALSE
);
ALTER TABLE detallefichaestudiante
  OWNER TO postgres;

  
-- Table: medicina

-- DROP TABLE medicina;

CREATE TABLE medicina
(
  idmedicina bigserial NOT NULL,
  descripcion character varying(1000),
  cajasdisponibles integer NOT NULL,
  estadodisponible boolean NOT NULL,
  estadoborrado boolean NOT NULL,
  CONSTRAINT medicina_pkey PRIMARY KEY (idmedicina)
)
WITH (
  OIDS=FALSE
);
ALTER TABLE medicina
  OWNER TO postgres;

  
-- Table: medicinaepecifica

-- DROP TABLE medicinaepecifica;

CREATE TABLE medicinaepecifica
(
  idmedicinaespecifica bigserial NOT NULL,
  unidadesdisponibles integer NOT NULL,
  estadocaducado boolean NOT NULL,
  estadoborrado boolean NOT NULL,
  idmedicina bigint NOT NULL,
  fechacaducidad date NOT NULL,
  CONSTRAINT medicinaepecifica_pkey PRIMARY KEY (idmedicinaespecifica),
  CONSTRAINT fkmedicinaep947051 FOREIGN KEY (idmedicina)
      REFERENCES medicina (idmedicina) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
)
WITH (
  OIDS=FALSE
);
ALTER TABLE medicinaepecifica
  OWNER TO postgres;

  
-- Table: receta

-- DROP TABLE receta;

CREATE TABLE receta
(
  idreceta bigserial NOT NULL,
  dosis integer NOT NULL,
  estadoborrado boolean NOT NULL,
  iddetallefichaestudiante bigint NOT NULL,
  idmedicinaepecifica bigint NOT NULL,
  CONSTRAINT receta_pkey PRIMARY KEY (idreceta),
  CONSTRAINT fkreceta702741 FOREIGN KEY (iddetallefichaestudiante)
      REFERENCES detallefichaestudiante (iddetalleficha) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fkreceta791018 FOREIGN KEY (idmedicinaepecifica)
      REFERENCES medicinaepecifica (idmedicinaespecifica) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
)
WITH (
  OIDS=FALSE
);
ALTER TABLE receta
  OWNER TO postgres;

  
-- Table: detalleabastecimiento

-- DROP TABLE detalleabastecimiento;

CREATE TABLE detalleabastecimiento
(
  idabastecimiento bigserial NOT NULL,
  cajasantesabastecimiento integer NOT NULL,
  cajasdespuesabastecimiento integer NOT NULL,
  cajastotales integer,
  estadoborrado boolean NOT NULL,
  idmedicina bigint NOT NULL,
  idenfermero bigint,
  iddoctor bigint,
  fechaabastecimiento date NOT NULL,
  CONSTRAINT detalleabastecimiento_pkey PRIMARY KEY (idabastecimiento),
  CONSTRAINT fkdetalleaba150528 FOREIGN KEY (idenfermero)
      REFERENCES enfermero (idenfermero) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fkdetalleaba326950 FOREIGN KEY (iddoctor)
      REFERENCES doctor (iddoctor) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fkdetalleaba824044 FOREIGN KEY (idmedicina)
      REFERENCES medicina (idmedicina) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
)
WITH (
  OIDS=FALSE
);
ALTER TABLE detalleabastecimiento
  OWNER TO postgres;

  
-- Table: categoriamedicina

-- DROP TABLE categoriamedicina;

CREATE TABLE categoriamedicina
(
  idcategoriamedicina serial NOT NULL,
  estadoborrado boolean NOT NULL,
  descripcion character varying(255) NOT NULL,
  CONSTRAINT categoriamedicina_pkey PRIMARY KEY (idcategoriamedicina)
)
WITH (
  OIDS=FALSE
);
ALTER TABLE categoriamedicina
  OWNER TO postgres;

  
-- Table: categoriamedicinamedicina

-- DROP TABLE categoriamedicinamedicina;

CREATE TABLE categoriamedicinamedicina
(
  idcategoriamedicinamedicina bigserial NOT NULL,
  estadoborrado boolean NOT NULL,
  idmedicina bigint NOT NULL,
  idcategoriamedicina integer NOT NULL,
  CONSTRAINT categoriamedicinamedicina_pkey PRIMARY KEY (idcategoriamedicinamedicina),
  CONSTRAINT fkcategoriam644013 FOREIGN KEY (idcategoriamedicina)
      REFERENCES categoriamedicina (idcategoriamedicina) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fkcategoriam819190 FOREIGN KEY (idmedicina)
      REFERENCES medicina (idmedicina) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
)
WITH (
  OIDS=FALSE
);
ALTER TABLE categoriamedicinamedicina
  OWNER TO postgres;

  
-- Table: categoriapatologia

-- DROP TABLE categoriapatologia;

CREATE TABLE categoriapatologia
(
  idcategoria bigserial NOT NULL,
  estadoborrado boolean NOT NULL,
  descripcion character varying(255) NOT NULL,
  CONSTRAINT categoriapatologia_pkey PRIMARY KEY (idcategoria)
)
WITH (
  OIDS=FALSE
);
ALTER TABLE categoriapatologia
  OWNER TO postgres;

  
-- Table: patologia

-- DROP TABLE patologia;

CREATE TABLE patologia
(
  idpatologia bigserial NOT NULL,
  nombre character varying(255) NOT NULL,
  descripcion character varying(1000) NOT NULL,
  estadoborrado boolean NOT NULL,
  idcategoriapatologia bigint NOT NULL,
  CONSTRAINT patologia_pkey PRIMARY KEY (idpatologia),
  CONSTRAINT fkpatologia730371 FOREIGN KEY (idcategoriapatologia)
      REFERENCES categoriapatologia (idcategoria) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
)
WITH (
  OIDS=FALSE
);
ALTER TABLE patologia
  OWNER TO postgres;

  
-- Table: patologiadetalleficha

-- DROP TABLE patologiadetalleficha;

CREATE TABLE patologiadetalleficha
(
  idpatogogiaficha bigserial NOT NULL,
  estadoborrado boolean NOT NULL,
  iddetallefichaestudiante bigint NOT NULL,
  idpatologia bigint NOT NULL,
  CONSTRAINT patologiadetalleficha_pkey PRIMARY KEY (idpatogogiaficha),
  CONSTRAINT fkpatologiad38117 FOREIGN KEY (idpatologia)
      REFERENCES patologia (idpatologia) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fkpatologiad426301 FOREIGN KEY (iddetallefichaestudiante)
      REFERENCES detallefichaestudiante (iddetalleficha) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
)
WITH (
  OIDS=FALSE
);
ALTER TABLE patologiadetalleficha
  OWNER TO postgres;


INSERT INTO roleuser(descripcion)
    VALUES ('ROLE_DOCTOR'),('ROLE_ENFERMERO'),('ROLE_ESTUDIANTE'),('ROLE_PROFESIONAL');

	INSERT INTO doctor(username, horaentrada, horasalida, estadoborrado, idroleuser)
    VALUES ('rmaya','09:00:00','11:00:00',false,1);
	
	INSERT INTO medicina(descripcion,cajasdisponibles, estadodisponible, estadoborrado)
    VALUES ('Apronax 550mg',20,true,false);
	
	INSERT INTO medicina(descripcion,cajasdisponibles, estadodisponible, estadoborrado)
    VALUES ('Finalin Forte',12,true,false);
	
	INSERT INTO medicina(descripcion,cajasdisponibles, estadodisponible, estadoborrado)
    VALUES ('Aspirina',22,true,false);
	
	INSERT INTO medicina(descripcion,cajasdisponibles, estadodisponible, estadoborrado)
    VALUES ('Voltaren 220mg',20,true,false);
	
	INSERT INTO categoriamedicina(estadoborrado, descripcion)
    VALUES (false, 'analgesico');
	
	INSERT INTO categoriamedicina(estadoborrado, descripcion)
    VALUES (false, 'desinflamatorio');
	
	INSERT INTO categoriamedicina(estadoborrado, descripcion)
    VALUES (false, 'mucolitico');
	
	INSERT INTO categoriamedicina(estadoborrado, descripcion)
    VALUES (false, 'antibiotico');
	
	INSERT INTO categoriamedicinamedicina(estadoborrado, idmedicina, idcategoriamedicina)
    VALUES (false, 1, 1);
	
	INSERT INTO categoriamedicinamedicina(estadoborrado, idmedicina, idcategoriamedicina)
    VALUES (false, 2, 3);
	
	INSERT INTO categoriamedicinamedicina(estadoborrado, idmedicina, idcategoriamedicina)
    VALUES (false, 3, 2);
	
	INSERT INTO categoriamedicinamedicina(estadoborrado, idmedicina, idcategoriamedicina)
    VALUES (false, 4, 1);
	
	
